/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package financeManager;


import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.List;
import main.FileReaderUtil;
import main.FileWriterUtil;


/**
 *
 * @author HP
 */
public class PurchaseOrder_Approval extends javax.swing.JFrame {

    private ArrayList<PurchaseOrder> poList;
    private DefaultTableModel tableModel;
    

    /**
     * Creates new form PurchaseOrder_Approval
     */
    public PurchaseOrder_Approval() {
        initComponents();
        setLocationRelativeTo(null);
        loadTableData();
        setupListeners();
        jPanel1.setBackground(new java.awt.Color(0xc5e1ef));
    }
    
    private void loadTableData() {
        poList = PurchaseOrder.loadPurchaseOrders();

        tableModel = new DefaultTableModel(
            new String[]{"PO ID", "PR ID", "Item Code", "Quantity", "Supplier ID", "PM ID", "Date", "Status"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jTable2.setModel(tableModel);
        for (PurchaseOrder po : poList) {
            tableModel.addRow(new Object[]{
                po.getPoID(),
                po.getPrID(),
                po.getItemCode(),
                po.getQuantity(),
                po.getSupplierID(),
                po.getPmID(),
                po.getDate(),
                po.getStatus()
            });
        }
        tableModel.fireTableDataChanged();
    }

    
    
    
    private void setupListeners() {
        jTable2.getSelectionModel().addListSelectionListener(e -> {
            int row = jTable2.getSelectedRow();
            if (row >= 0 && row < jTable2.getRowCount()) {
                PurchaseOrder selectedPO = poList.get(row);
                PO_ID_TextField.setText(selectedPO.getPoID());
                PR_ID_TextField.setText(selectedPO.getPrID());
                Item_Code_TextField.setText(selectedPO.getItemCode());
                Quantity_TextField.setText(String.valueOf(selectedPO.getQuantity()));
                PM_ID_TextField.setText(selectedPO.getPmID());
                Date_TextField.setText(selectedPO.getDate());
                Status_TextField.setText(selectedPO.getStatus());
                
                List<String> suppliers = loadSuppliersForPR(selectedPO.getPrID());

                if (suppliers.size() == 1) {
                    jComboBox1.setSelectedItem(suppliers.get(0));
                }
                
                PO_ID_TextField.setEnabled(false);
                PR_ID_TextField.setEnabled(false);
                Item_Code_TextField.setEnabled(false);
                Quantity_TextField.setEnabled(false);
                PM_ID_TextField.setEnabled(false);
                Date_TextField.setEnabled(false);
                Status_TextField.setEnabled(false);
                jComboBox1.setEnabled(false);
            }
        });
    }
    
    private void savePurchaseOrdersToFile() {
        List<String[]> dataToWrite = new ArrayList<>();

        for (PurchaseOrder po : poList) {
            String line = po.getPoID() + "," + po.getPrID() + "," + po.getItemCode() + "," +
                          po.getQuantity() + "," + po.getSupplierID() + "," + po.getPmID() + "," +
                          po.getDate() + "," + po.getStatus();
            dataToWrite.add(line.split(","));
        }

        FileWriterUtil.writeFile("purchase_orders.txt", dataToWrite);
    }
    
    private List<String> loadSuppliersForPR(String prID) {
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Select Supplier");

        List<String[]> prList = FileReaderUtil.readFile("purchase_requisition.txt");
        List<String> suppliers = new ArrayList<>();

        for (String[] pr : prList) {
            if (pr[0].equalsIgnoreCase(prID)) {
                String[] supplierIDs = pr[2].split(";");
                for (String supplierID : supplierIDs) {
                    String trimmedID = supplierID.trim();
                    jComboBox1.addItem(trimmedID);
                    suppliers.add(trimmedID);
                }
                break;
            }
        }

        return suppliers;
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Quantity_TextField = new javax.swing.JTextField();
        PR_ID_TextField = new javax.swing.JTextField();
        PM_ID_TextField = new javax.swing.JTextField();
        Approve = new javax.swing.JButton();
        Modify_Quantity = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        PO_ID = new javax.swing.JLabel();
        PR_ID = new javax.swing.JLabel();
        Supplier = new javax.swing.JLabel();
        Quantity = new javax.swing.JLabel();
        Status = new javax.swing.JLabel();
        PO_ID_TextField = new javax.swing.JTextField();
        Status_TextField = new javax.swing.JTextField();
        ItemCode_Label = new javax.swing.JLabel();
        Item_Code_TextField = new javax.swing.JTextField();
        PM_ID = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        Date_TextField = new javax.swing.JTextField();
        Search_TextField = new javax.swing.JTextField();
        RefreshButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        PO_name1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton2.setText("jButton1");

        jButton3.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(java.awt.SystemColor.controlHighlight);
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));

        Quantity_TextField.setColumns(15);
        Quantity_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Quantity_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Quantity_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quantity_TextFieldActionPerformed(evt);
            }
        });

        PR_ID_TextField.setColumns(15);
        PR_ID_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PR_ID_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        PR_ID_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PR_ID_TextFieldActionPerformed(evt);
            }
        });

        PM_ID_TextField.setColumns(15);
        PM_ID_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PM_ID_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        PM_ID_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PM_ID_TextFieldActionPerformed(evt);
            }
        });

        Approve.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Approve.setText("Approve");
        Approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveActionPerformed(evt);
            }
        });

        Modify_Quantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Modify_Quantity.setText("Edit");
        Modify_Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modify_QuantityActionPerformed(evt);
            }
        });

        Save.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        PO_ID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PO_ID.setText("PO ID:");

        PR_ID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PR_ID.setText("PR ID:");

        Supplier.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Supplier.setText("Supplier ID:");

        Quantity.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Quantity.setText("Quantity:");

        Status.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Status.setText("Status:");

        PO_ID_TextField.setColumns(15);
        PO_ID_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PO_ID_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        PO_ID_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PO_ID_TextFieldActionPerformed(evt);
            }
        });

        Status_TextField.setColumns(15);
        Status_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Status_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Status_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Status_TextFieldActionPerformed(evt);
            }
        });

        ItemCode_Label.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ItemCode_Label.setText("Item Code:");

        Item_Code_TextField.setColumns(15);
        Item_Code_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Item_Code_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Item_Code_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item_Code_TextFieldActionPerformed(evt);
            }
        });

        PM_ID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        PM_ID.setText("PM ID:");

        Date.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Date.setText("Date:");

        Date_TextField.setColumns(15);
        Date_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Date_TextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Date_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_TextFieldActionPerformed(evt);
            }
        });

        Search_TextField.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        RefreshButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        SearchButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        PO_name1.setBackground(new java.awt.Color(204, 204, 255));
        PO_name1.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        PO_name1.setText("Purchase Order Approval");

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selected Supplier", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton4.setText("Menu");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton5.setText("Edit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 712, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RefreshButton)
                                .addGap(301, 301, 301)
                                .addComponent(Search_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(55, 55, 55)
                                .addComponent(PO_name1)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(42, 42, 42))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Quantity)
                    .addComponent(Supplier)
                    .addComponent(PR_ID)
                    .addComponent(PO_ID)
                    .addComponent(ItemCode_Label))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(Quantity_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Item_Code_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PR_ID_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PO_ID_TextField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Status)
                            .addComponent(PM_ID)
                            .addComponent(Date))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PM_ID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Status_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Date_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Modify_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(Approve, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(19, Short.MAX_VALUE)
                        .addComponent(PO_name1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RefreshButton)
                    .addComponent(Search_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PO_ID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PO_ID))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PR_ID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PR_ID)
                            .addComponent(Status))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Item_Code_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ItemCode_Label)
                            .addComponent(Date)
                            .addComponent(Date_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PM_ID)
                            .addComponent(PM_ID_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Status_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Modify_Quantity)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Quantity)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Approve)
                            .addComponent(Save)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Supplier)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Quantity_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quantity_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quantity_TextFieldActionPerformed

    private void PR_ID_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PR_ID_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PR_ID_TextFieldActionPerformed

    private void PM_ID_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PM_ID_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PM_ID_TextFieldActionPerformed

    private void ApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveActionPerformed
        Status_TextField.setText("Approved");
    }//GEN-LAST:event_ApproveActionPerformed

    private void Modify_QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modify_QuantityActionPerformed
        Quantity_TextField.setEnabled(true);
    }//GEN-LAST:event_Modify_QuantityActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        int row = jTable2.getSelectedRow();

        if (row >= 0) {
            PurchaseOrder selectedPO = poList.get(row);

            selectedPO.setQuantity(Integer.parseInt(Quantity_TextField.getText()));
            selectedPO.setStatus(Status_TextField.getText());

            String selectedSupplier = (String) jComboBox1.getSelectedItem();
            if (selectedSupplier != null && !selectedSupplier.equals("Select Supplier")) {
                selectedPO.setSupplierID(selectedSupplier);

                tableModel.setValueAt(selectedPO.getQuantity(), row, 3);    // Quantity
                tableModel.setValueAt(selectedPO.getSupplierID(), row, 4);  // Supplier ID
                tableModel.setValueAt(selectedPO.getStatus(), row, 7);      // Status

                savePurchaseOrdersToFile();

                JOptionPane.showMessageDialog(this, "Purchase Order updated for " + selectedPO.getPoID());
            } else {
                JOptionPane.showMessageDialog(this, "Please select a valid supplier ID.");
            }

            Quantity_TextField.setEnabled(false);
            Status_TextField.setEnabled(false);
            jComboBox1.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "No row selected.");
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void PO_ID_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PO_ID_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PO_ID_TextFieldActionPerformed

    private void Status_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Status_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Status_TextFieldActionPerformed

    private void Item_Code_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item_Code_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Item_Code_TextFieldActionPerformed

    private void Date_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Date_TextFieldActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        String searchText = Search_TextField.getText().trim();
        tableModel.setRowCount(0);

        for (PurchaseOrder po : poList) {
            if (po.getPoID().contains(searchText)) {
                tableModel.addRow(new Object[]{
                    po.getPoID(),
                    po.getPrID(),
                    po.getItemCode(),
                    po.getQuantity(),
                    po.getSupplierID(),
                    po.getPmID(),
                    po.getDate(),
                    po.getStatus()
                });
            }
        }
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        loadTableData();
    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        FinanceManagerMenu menu = new FinanceManagerMenu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow >= 0) {
            String supplierID = jTable2.getValueAt(selectedRow, 4).toString();
            jComboBox1.setSelectedItem(supplierID);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int row = jTable2.getSelectedRow();

        if (row >= 0) {
            String prID = (String) jTable2.getValueAt(row, 1);


            List<String> suppliers = loadSuppliersForPR(prID);

            if (suppliers.size() > 1) {
                jComboBox1.setEnabled(true);
                JOptionPane.showMessageDialog(this, "You can now change the supplier.");
            } else {
                jComboBox1.setEnabled(false);
                JOptionPane.showMessageDialog(this, "This PR only has one supplier. Editing is not allowed.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first.");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder_Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder_Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder_Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseOrder_Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseOrder_Approval().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approve;
    private javax.swing.JLabel Date;
    private javax.swing.JTextField Date_TextField;
    private javax.swing.JLabel ItemCode_Label;
    private javax.swing.JTextField Item_Code_TextField;
    private javax.swing.JButton Modify_Quantity;
    private javax.swing.JLabel PM_ID;
    private javax.swing.JTextField PM_ID_TextField;
    private javax.swing.JLabel PO_ID;
    private javax.swing.JTextField PO_ID_TextField;
    private javax.swing.JLabel PO_name1;
    private javax.swing.JLabel PR_ID;
    private javax.swing.JTextField PR_ID_TextField;
    private javax.swing.JLabel Quantity;
    private javax.swing.JTextField Quantity_TextField;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton Save;
    private javax.swing.JButton SearchButton;
    private javax.swing.JTextField Search_TextField;
    private javax.swing.JLabel Status;
    private javax.swing.JTextField Status_TextField;
    private javax.swing.JLabel Supplier;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
