package javaassignment;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
public class SupplierManagementGUI extends javax.swing.JFrame {
    List<Supplier> supplierList = new ArrayList<>();
    List<Item> itemList = new ArrayList<>();
        public SupplierManagementGUI() {
            initComponents();
            setLocationRelativeTo(null);
            supplierList = Supplier.loadSupplierFromFile("suppliers.txt");
            itemList = Item.loadItemFromFile("item.txt",supplierList);
            System.out.println("Loaded suppliers: " + supplierList.size());
            makeTableReadOnly();
            loadSuppliersToTable();       
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveSupplierBtn = new java.awt.Button();
        txtSupplierEmail = new javax.swing.JTextField();
        txtSupplierPhoneNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SupplierTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        editSupplierBtn = new java.awt.Button();
        addSupplierBtn = new java.awt.Button();
        deleteSupplierBtn = new java.awt.Button();
        txtSupplierName = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        BackToMenuBtn = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        saveSupplierBtn.setBackground(new java.awt.Color(255, 255, 255));
        saveSupplierBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        saveSupplierBtn.setLabel("SAVE");
        saveSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSupplierBtnActionPerformed(evt);
            }
        });

        txtSupplierEmail.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtSupplierEmail.setToolTipText("Supplier Email");

        txtSupplierPhoneNo.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SUPPLIER MANAGEMENT");

        SupplierTable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        SupplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Supplier ID", "Supplier Name", "Contact Number", "Email", "Supplies Item"
            }
        ));
        SupplierTable.setEnabled(false);
        SupplierTable.setShowGrid(true);
        jScrollPane2.setViewportView(SupplierTable);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Contact Number");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Email");

        editSupplierBtn.setBackground(new java.awt.Color(255, 255, 255));
        editSupplierBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        editSupplierBtn.setLabel("EDIT");
        editSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSupplierBtnActionPerformed(evt);
            }
        });

        addSupplierBtn.setBackground(new java.awt.Color(255, 255, 255));
        addSupplierBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        addSupplierBtn.setLabel("ADD");
        addSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSupplierBtnActionPerformed(evt);
            }
        });

        deleteSupplierBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteSupplierBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        deleteSupplierBtn.setLabel("DELETE");
        deleteSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSupplierBtnActionPerformed(evt);
            }
        });

        txtSupplierName.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        txtSearch.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Search Supplier");

        SearchBtn.setBackground(java.awt.SystemColor.activeCaption);
        SearchBtn.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        SearchBtn.setText("SEARCH");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        BackToMenuBtn.setBackground(new java.awt.Color(255, 255, 255));
        BackToMenuBtn.setLabel("MENU");
        BackToMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMenuBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackToMenuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtSupplierPhoneNo, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSupplierEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(addSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addComponent(editSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(deleteSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                                .addComponent(saveSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtSupplierName)
                            .addComponent(txtSearch))
                        .addGap(31, 31, 31)
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BackToMenuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(SearchBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSupplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSupplierPhoneNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtSupplierEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSupplierBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editSupplierBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteSupplierBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveSupplierBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSupplierBtnActionPerformed
    }//GEN-LAST:event_saveSupplierBtnActionPerformed

    private void editSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSupplierBtnActionPerformed
        //TODO add your handling code here:
        String editSupplier = txtSupplierName.getText().trim();
        DefaultTableModel model = (DefaultTableModel)SupplierTable.getModel();
        boolean found = false;
        for(int i=0; i<model.getRowCount();i++){
            if(model.getValueAt(i,1).toString().equalsIgnoreCase(editSupplier)){
                txtSupplierName.setText(model.getValueAt(i, 1).toString());
                txtSupplierPhoneNo.setText(model.getValueAt(i, 2).toString());
                txtSupplierEmail.setText(model.getValueAt(i, 3).toString());
                found = true;
                txtSupplierName.setEditable(true);
                txtSupplierPhoneNo.setEditable(true);txtSupplierEmail.setEditable(true);
                break;
            }
        }
    }//GEN-LAST:event_editSupplierBtnActionPerformed

    private void addSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSupplierBtnActionPerformed
        //TODO add your handling code here:
        try{
            String newSupplierName = txtSupplierName.getText().trim();
            if(!newSupplierName.isEmpty()){
                newSupplierName = newSupplierName.substring(0,1).toUpperCase() + newSupplierName.substring(1).toLowerCase();
            }
                
            String email = txtSupplierEmail.getText().trim();
            String phone = txtSupplierPhoneNo.getText().trim();

    
            if (!email.matches("^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,6}$")) {
                JOptionPane.showMessageDialog(null, "Invalid email format.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!phone.matches("^\\d{8,15}$")) {
                JOptionPane.showMessageDialog(null, "Phone number must contain 8 to 15 digits.", "Input Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
                
            boolean isDuplicate = false;
            for (Supplier supplier : supplierList){
                if(supplier.getSupplierName().equalsIgnoreCase(newSupplierName)){
                    isDuplicate = true;
                    break;
                }
            }
            if(isDuplicate){
                JOptionPane.showMessageDialog(null, "Supplier name already exists","Duplicate",JOptionPane.WARNING_MESSAGE);
            }else{
                String newSupplierID = String.format("S%03d", supplierList.size()+1);
                Supplier newSupplier = new Supplier(
                    newSupplierID,
                    newSupplierName,
                    txtSupplierPhoneNo.getText(),
                    txtSupplierEmail.getText());
                    supplierList.add(newSupplier);
                    FileWriterUtil.writeFile("supplier.txt",Supplier.convertToStringArrayList(supplierList));
                    System.out.println("New Supplier added.");
                }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_addSupplierBtnActionPerformed

    private void deleteSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSupplierBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = SupplierTable.getSelectedRow();
        if(selectedRow == -1){
            String findSupplier = txtSupplierName.getText().trim();
            if(findSupplier.isEmpty()){
                JOptionPane.showMessageDialog(this,"Please enter Supplier ID or Name to delete.");
                return;
            }
            boolean found = false;
            for (int i = 0; i < supplierList.size(); i++){
                Supplier s = supplierList.get(i);
                if (s.getSupplierId().equalsIgnoreCase(findSupplier) || s.getSupplierName().equalsIgnoreCase(findSupplier)) {
                   int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to remove this Supplier?","Confrim Delete",JOptionPane.YES_NO_OPTION);
                   if(confirm == JOptionPane.YES_OPTION){
                        supplierList.remove(i);
                        System.out.println("Loaded suppliers: " + supplierList.size());
                        FileWriterUtil.writeFile("supplier.txt",Supplier.convertToStringArrayList(supplierList));
                        //clear input
                        clearInput();
                        JOptionPane.showMessageDialog(this, "Item deleted successfully.");
                    } 
                    found = true;
                    break;
                }
            }
            if (!found){
                JOptionPane.showMessageDialog(this,"Supplier not found");
            }
        }
    }//GEN-LAST:event_deleteSupplierBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
        String input = txtSearch.getText().trim();
        if (input.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter Supplier ID or Name to search.");
            return;
        }

        boolean found = false;
        for (Supplier s : supplierList) {
            if (s.getSupplierId().equalsIgnoreCase(input) || s.getSupplierName().equalsIgnoreCase(input)) {
            // Populate the fields
                txtSupplierName.setText(s.getSupplierName());
                txtSupplierPhoneNo.setText(s.getSupplierPhoneNo());
                txtSupplierEmail.setText(s.getSupplierEmail());
                found = true;
                break;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "Supplier not found.");
        }  
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void BackToMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMenuBtnActionPerformed
        // TODO add your handling code here:
        SalesManagerMenu menu = new SalesManagerMenu();
        menu.setLocationRelativeTo(null); //center the window
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackToMenuBtnActionPerformed

    private void loadSuppliersToTable(){
        DefaultTableModel model = (DefaultTableModel) SupplierTable.getModel();
        model.setRowCount(0);

        for (Supplier supplier : supplierList) {
            String itemIdList = getFormattedItemDetails(supplier,itemList);
            if (itemIdList.isEmpty()){
                itemIdList = "No Items";
            }
            Object[] row = {
                supplier.getSupplierId(),
                supplier.getSupplierName(),
                supplier.getSupplierPhoneNo(),
                supplier.getSupplierEmail(),
                itemIdList
            };
            model.addRow(row);
        }
        System.out.println("Rows loaded into table: " + model.getRowCount());
    }
    
    private void makeTableReadOnly(){
        DefaultTableModel model = new DefaultTableModel(
        new String[]{"Supplier ID","Supplier Name", "Contact Number","Email","Supplied Item"},0
        ){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        SupplierTable.setModel(model);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(javax.swing.JLabel.CENTER);

        for (int i = 0; i < SupplierTable.getColumnCount(); i++) {
            if (i != 4) { // Skip column 5 for wrapping
                SupplierTable.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }
        }
        SupplierTable.getColumnModel().getColumn(4).setCellRenderer((table, value, isSelected, hasFocus, row, column) -> {
            JTextArea textArea = new JTextArea(value != null ? value.toString() : "");
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
            textArea.setOpaque(true);
            textArea.setEditable(false);
            textArea.setFocusable(false);
            textArea.setFont(table.getFont());
            textArea.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
            textArea.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());

            // 🧠 Adjust row height to fit wrapped text
            int preferredHeight = textArea.getPreferredSize().height;
            if (table.getRowHeight(row) < preferredHeight) {
                table.setRowHeight(row, preferredHeight);
            }
            return textArea;
        });
    }
    
    private String getFormattedItemDetails(Supplier supplier,List<Item> itemList){
        StringBuilder sb = new StringBuilder();
        String supplierid = supplier.getSupplierId();
        for (Item item : itemList){
            if(item.getSupplierids().contains(supplierid)){
                sb.append(item.getItemID()).append(" - ").append(item.getItemName()).append("\n");
            }
        }
        return sb.toString().trim();
    }
    
    

   
    private void clearInput(){
        txtSupplierName.setText("");
        txtSupplierPhoneNo.setText("");
        txtSupplierEmail.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierManagementGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierManagementGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button BackToMenuBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTable SupplierTable;
    private java.awt.Button addSupplierBtn;
    private java.awt.Button deleteSupplierBtn;
    private java.awt.Button editSupplierBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Button saveSupplierBtn;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSupplierEmail;
    private javax.swing.JTextField txtSupplierName;
    private javax.swing.JTextField txtSupplierPhoneNo;
    // End of variables declaration//GEN-END:variables
}
