/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package admin;

import main.FileReaderUtil;
import javax.swing.*;
import javax.swing.table.*;
import java.util.List;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author USER
 */
public class requisition_ordersGUI extends javax.swing.JFrame {
    private String userID;


    public requisition_ordersGUI() {
        initComponents();
        getContentPane().setBackground(new java.awt.Color(0xc5e1ef));
        this.setLocationRelativeTo(null);
        
        POTableFormat();
        PRTableFormat();
        loadPO();
        loadPR();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        prTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        poTable = new javax.swing.JTable();
        searchPRField = new javax.swing.JTextField();
        searchPOField = new javax.swing.JTextField();
        searchPRButton2 = new javax.swing.JButton();
        searchPOButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        refreshPRButton5 = new javax.swing.JButton();
        refreshPOButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Filter = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 45)); // NOI18N
        jLabel1.setText("Requisition & Order");

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Menu");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        prTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        prTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PR ID", "Item ID", "Supplier ID", "Quantity", "Required Date", "SM ID", "Status"
            }
        ));
        jScrollPane1.setViewportView(prTable);

        poTable.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        poTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PO ID", "PR ID", "Item Code", "Quantity", "Supplier ID", "PM ID", "Date", "Status"
            }
        ));
        jScrollPane2.setViewportView(poTable);

        searchPRField.setBackground(new java.awt.Color(255, 255, 204));

        searchPOField.setBackground(new java.awt.Color(255, 255, 204));
        searchPOField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPOFieldActionPerformed(evt);
            }
        });

        searchPRButton2.setBackground(new java.awt.Color(204, 204, 204));
        searchPRButton2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        searchPRButton2.setText("Search");
        searchPRButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPRButton2ActionPerformed(evt);
            }
        });

        searchPOButton3.setBackground(new java.awt.Color(204, 204, 204));
        searchPOButton3.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        searchPOButton3.setText("Search");
        searchPOButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPOButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton4.setText("Edit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        refreshPRButton5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        refreshPRButton5.setText("Refresh");
        refreshPRButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshPRButton5ActionPerformed(evt);
            }
        });

        refreshPOButton8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        refreshPOButton8.setText("Refresh");
        refreshPOButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshPOButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jButton9.setText("Edit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 20)); // NOI18N
        jLabel2.setText("PURCHASE REQUISITION");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 20)); // NOI18N
        jLabel3.setText("PURCHASE ORDER");

        Filter.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Updated", "Approved", "Pending" }));
        Filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchPOField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchPOButton3)
                                .addGap(82, 82, 82)
                                .addComponent(jLabel3)
                                .addGap(36, 36, 36)
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refreshPOButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Filter, 0, 1, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(125, 125, 125)
                                .addComponent(jLabel1)
                                .addGap(0, 180, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchPRField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchPRButton2)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4)
                                .addGap(18, 18, 18)
                                .addComponent(refreshPRButton5)))
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchPRField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchPRButton2)
                    .addComponent(refreshPRButton5)
                    .addComponent(jButton4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchPOField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchPOButton3))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jButton9)
                            .addComponent(refreshPOButton8)
                            .addComponent(Filter, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AdminMenuGUI menu = new AdminMenuGUI();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        new admin.PR(UserClassification.getCurrentUser().getUserName()).setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        
        // TODO add your handling code here:
        new PO(userID).setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void refreshPRButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshPRButton5ActionPerformed
        // TODO add your handling code here:
        loadPR();
        JOptionPane.showMessageDialog(this, "Purchase Requisition list refreshed successfully!");
    }//GEN-LAST:event_refreshPRButton5ActionPerformed

    private void refreshPOButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshPOButton8ActionPerformed
        // TODO add your handling code here:
        loadPO();
        JOptionPane.showMessageDialog(this, "Purchase Order list refreshed successfully!");
    }//GEN-LAST:event_refreshPOButton8ActionPerformed

    private void searchPOFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPOFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPOFieldActionPerformed

    private void searchPRButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPRButton2ActionPerformed
        // TODO add your handling code here:
        searchPR();
    }//GEN-LAST:event_searchPRButton2ActionPerformed

    private void searchPOButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPOButton3ActionPerformed
        // TODO add your handling code here:
        searchPO();
    }//GEN-LAST:event_searchPOButton3ActionPerformed

    private void FilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterActionPerformed
        String status = Filter.getSelectedItem().toString();
        if (status.equals("All")) {
            loadPO();
        } else {
            filterPurchaseOrder(status);
        }// TODO add your handling code here:
    }//GEN-LAST:event_FilterActionPerformed

    private void PRTableFormat() {
    DefaultTableModel model = new DefaultTableModel(
        new String[]{"PR ID", "Item ID", "Supplier ID", "Quantity", "Required Date", "SM ID", "Status"}, 0
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; 
        }
    };
    prTable.setModel(model);
    
    prTable.setRowHeight(23);
    
    prTable.getTableHeader().setFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 14));
    }
    
    private void POTableFormat() {
    DefaultTableModel model = new DefaultTableModel(
        new String[]{"PO ID", "PR ID", "Item ID", "Quantity", "Supplier ID", "PM ID", "Date ", "Status"}, 0
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; 
        }
    };
    poTable.setModel(model);
    
    poTable.setRowHeight(23);
    
    poTable.getTableHeader().setFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 14));
    }
    
    private void loadPR() {
    try {
        List<String[]> prList = FileReaderUtil.readFileAsArrays("purchase_requisition.txt");
        DefaultTableModel model = (DefaultTableModel) prTable.getModel();
        model.setRowCount(0); // Clear existing data

        for (String[] pr : prList) {
            if (pr.length == 7) {
                model.addRow(new Object[]{
                    pr[0], pr[1], pr[2], pr[3], pr[4], pr[5], pr[6]
                });
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading PR list: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    private void loadPO() {
    try {
        List<String[]> poList = FileReaderUtil.readFileAsArrays("purchase_orders.txt");
        DefaultTableModel model = (DefaultTableModel) poTable.getModel();
        model.setRowCount(0); // Clear existing data

        for (String[] po : poList) {
            if (po.length == 8) {
                model.addRow(new Object[]{
                    po[0], po[1], po[2], po[3], po[4], po[5], po[6], po[7]
                });
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading PO list: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void searchPO() {
        String keyword = searchPOField.getText().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) poTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        poTable.setRowSorter(sorter);

        if (keyword.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
        }
    }
    
    private void searchPR() {
        String keyword = searchPRField.getText().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) prTable.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        prTable.setRowSorter(sorter);

        if (keyword.trim().length() == 0) {
            sorter.setRowFilter(null);
        } else {
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
        }
    }
    
    private void filterPurchaseOrder(String status) {
        boolean found = false;
        DefaultTableModel model = (DefaultTableModel) poTable.getModel();
        model.setRowCount(0);
        String searchKeyword = searchPOField.getText().trim();

        for (String[] line : FileReaderUtil.readFileAsArrays("purchase_orders.txt")) {
            boolean statusMatch = line[7].equalsIgnoreCase(status);
            boolean searchMatch = searchKeyword.isEmpty() || 
                                  line[0].equals(searchKeyword) || 
                                  line[1].equals(searchKeyword) || 
                                  line[2].equals(searchKeyword) || 
                                  line[4].equals(searchKeyword);

            if (statusMatch && searchMatch) {
                model.addRow(new Object[]{line[0], line[1], line[2], line[3],
                                          line[4], line[5], line[6], line[7]});
                found = true;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "No Purchase Orders found with status: " + status);
            model.setRowCount(0); 
            loadPO();
            searchPOField.setText("");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(requisition_ordersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(requisition_ordersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(requisition_ordersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(requisition_ordersGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new requisition_ordersGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Filter;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable poTable;
    private javax.swing.JTable prTable;
    private javax.swing.JButton refreshPOButton8;
    private javax.swing.JButton refreshPRButton5;
    private javax.swing.JButton searchPOButton3;
    private javax.swing.JTextField searchPOField;
    private javax.swing.JButton searchPRButton2;
    private javax.swing.JTextField searchPRField;
    // End of variables declaration//GEN-END:variables
}
